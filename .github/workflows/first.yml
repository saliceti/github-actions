# This is a basic workflow to help you get started with Actions

name: First

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
    - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    # Runs a single command using the runners shell
    - name: Print sha etc
      run: |
        echo ${{github.sha}}
        echo ${{github.ref}}
        echo ${{ steps.tag_version.outputs.new_tag }}

    - name: Trigger second Workflow
      uses: benc-uk/workflow-dispatch@v1.1
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
        ref: ${{ steps.tag_version.outputs.new_tag }}
        workflow: Second # Workflow name
        inputs: '{"environment": "staging", "tag": "abcd123"}'

    - name: Wait for Deploy App Workflow for review
      id: wait_for_deploy_app
      uses: fountainhead/action-wait-for-check@v1.0.0
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
        checkName: second-job # Job name within workflow
        ref: ${{ steps.tag_version.outputs.new_tag }}
        timeoutSeconds: 720
        intervalSeconds: 15

    # # Error
    # - name: Error on purpose
    #   run: date

    # # Runs a set of commands using the runners shell
    # - name: Run a multi-line script
    #   run: |
    #     echo Add other actions to build,
    #     echo test, and deploy your project.
    #     echo "Let's go to ${{ github.event.client_payload.location }}"

    # - uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 0.12.25

    # - name: Check terraform version
    #   run: |
    #     which terraform
    #     ls -l /usr/local/bin/terraform*
    #     terraform version

    # - name: Check Bash version
    #   run: bash --version

    # - name: Check empty env
    #   run: |
    #     echo IDONTEXIST=AAA${IDONTEXIST}BBB
    #     echo IDONTEXIST=AAA${{ env.IDONTEXIST }}BBB
